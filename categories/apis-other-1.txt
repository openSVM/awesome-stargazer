# APIS OTHER 1 (90 repositories)

egbertbouman/youtube-comment-downloader: Simple script for downloading Youtube comments without using the Youtube API - https://github.com/egbertbouman/youtube-comment-downloader
google-ai-edge/mediapipe: Cross-platform, customizable ML solutions for live and streaming media. - https://github.com/google-ai-edge/mediapipe
skydoves/chatgpt-android: 📲 ChatGPT Android demonstrates a Chatbot application using OpenAI's chat API on Android with Stream Chat SDK for Compose. - https://github.com/skydoves/chatgpt-android
ml-tooling/opyrator: 🪄 Turns your machine learning code into microservices with web API, interactive GUI, and more. - https://github.com/ml-tooling/opyrator
sapientinc/HRM: Hierarchical Reasoning Model Official Release - https://github.com/sapientinc/HRM
openai/openai-cua-sample-app: Learn how to use CUA (our Computer Using Agent) via the API on multiple computer environments. - https://github.com/openai/openai-cua-sample-app
googleapis/genai-toolbox: MCP Toolbox for Databases is an open source MCP server for databases. - https://github.com/googleapis/genai-toolbox
lmangani/aggressio: Hash-Ring HTTP Proxy to run aggregated queries across multiple JSON APIs - https://github.com/lmangani/aggressio
firecrawl/firecrawl-mcp-server: 🔥 Official Firecrawl MCP Server - Adds powerful web scraping and search to Cursor, Claude and any other LLM clients. - https://github.com/firecrawl/firecrawl-mcp-server
afarhadi99/mindful: A flutter application that implements OpenRouter API, Deepgram, ElevenLabs, and OpenAI - https://github.com/afarhadi99/mindful
llmariner/llmariner: Extensible generative AI platform on Kubernetes with OpenAI-compatible APIs. - https://github.com/llmariner/llmariner
varunvasudeva1/llm-server-docs: Documentation on setting up a local LLM server on Debian from scratch, using Ollama/llama.cpp/vLLM, Open WebUI, Kokoro FastAPI, and ComfyUI. - https://github.com/varunvasudeva1/llm-server-docs
llmkit-ai/llmkit: A prompt management, versioning, testing, and evaluation inference server and UI toolkit. Provider agnostic and OpenAI API compatible. - https://github.com/llmkit-ai/llmkit
AnotiaWang/deep-research-web-ui: (Supports DeepSeek R1) An AI-powered research assistant that performs iterative, deep research on any topic by combining search engines, web scraping, and large language models. - https://github.com/AnotiaWang/deep-research-web-ui
apify/crawlee: Crawlee—A web scraping and browser automation library for Node.js to build reliable crawlers. In JavaScript and TypeScript. Extract data for AI, LLMs, RAG, or GPTs. Download HTML, PDF, JPG, PNG, and other files from websites. Works with Puppeteer, Playwright, Cheerio, JSDOM, and raw HTTP. Both headful and headless mode. With proxy rotation. - https://github.com/apify/crawlee
nanobrowser/nanobrowser: Open-Source Chrome extension for AI-powered web automation. Run multi-agent workflows using your own LLM API key. Alternative to OpenAI Operator. - https://github.com/nanobrowser/nanobrowser
bentoml/OpenLLM: Run any open-source LLMs, such as DeepSeek and Llama, as OpenAI compatible API endpoint in the cloud. - https://github.com/bentoml/OpenLLM
arunpshankar/AgenticSearch: AgenticSearch operates within an agentic workflow, utilizing Gemini 2.0 and an extensive tool registry to handle complex questions. By integrating and synthesizing data from multiple APIs, it delivers cohesive and detailed answers, enabling a robust and intelligent search system. - https://github.com/arunpshankar/AgenticSearch
langdb/ai-gateway: Govern, Secure, and Optimize your AI Traffic. AI Gateway provides unified interface to all LLMs using OpenAI API format with a focus on performance and reliability. Built in Rust. - https://github.com/langdb/ai-gateway
nilsherzig/LLocalSearch: LLocalSearch is a completely locally running search aggregator using LLM Agents. The user can ask a question and the system will use a chain of LLMs to find the answer. The user can see the progress of the agents and the final answer. No OpenAI or Google API keys are needed. - https://github.com/nilsherzig/LLocalSearch
Integuru-AI/Integuru: The first AI agent that builds permissionless integrations through reverse engineering platforms' internal APIs. - https://github.com/Integuru-AI/Integuru
test-zeus-ai/testzeus-hercules: Hercules is the world’s first open-source testing agent, enabling UI, API, Security, Accessibility, and Visual validations – all without code or maintenance. Automate testing effortlessly and let Hercules handle the heavy lifting! ⚡ - https://github.com/test-zeus-ai/testzeus-hercules
caiiiycuk/js-dos: The best API for running dos programs in browser - https://github.com/caiiiycuk/js-dos
openai/openai-cookbook: Examples and guides for using the OpenAI API - https://github.com/openai/openai-cookbook
Doriandarko/o1-engineer: o1-engineer is a command-line tool designed to assist developers in managing and interacting with their projects efficiently. Leveraging the power of OpenAI's API, this tool provides functionalities such as code generation, file editing, and project planning to streamline your development workflow. - https://github.com/Doriandarko/o1-engineer
winfunc/deepclaude: A high-performance LLM inference API and Chat UI that integrates DeepSeek R1's CoT reasoning traces with Anthropic Claude models. - https://github.com/winfunc/deepclaude
supermemoryai/supermemory: Memory engine and app that is extremely fast, scalable. The Memory API for the AI era. - https://github.com/supermemoryai/supermemory
openai/openai-node: Official JavaScript / TypeScript library for the OpenAI API - https://github.com/openai/openai-node
openSVM/open-webui-solana: User-friendly AI Interface (Supports Ollama, OpenAI API, ...) - https://github.com/openSVM/open-webui-solana
open-webui/open-webui: User-friendly AI Interface (Supports Ollama, OpenAI API, ...) - https://github.com/open-webui/open-webui
reid41/QA-Pilot: QA-Pilot is an interactive chat project that leverages online/local LLM for rapid understanding and navigation of GitHub code repository. - https://github.com/reid41/QA-Pilot
superagent-ai/super-rag: Super performant RAG pipelines for AI apps. Summarization, Retrieve/Rerank and Code Interpreters in one simple API. - https://github.com/superagent-ai/super-rag
openai/openai-assistants-quickstart: OpenAI Assistants API quickstart with Next.js. - https://github.com/openai/openai-assistants-quickstart
DerwenAI/kglab: Graph Data Science: an abstraction layer in Python for building knowledge graphs, integrated with popular graph libraries – atop Pandas, NetworkX, RAPIDS, RDFlib, pySHACL, PyVis, morph-kgc, pslpython, pyarrow, etc. - https://github.com/DerwenAI/kglab
tcsenpai/DualMind: DualMind is an innovative AI conversation simulator that facilitates engaging dialogues between two AI models using the Ollama API. - https://github.com/tcsenpai/DualMind
0xsha/ChainWalker: Rapid Smart Contract Crawler - https://github.com/0xsha/ChainWalker
P1kaj1uu/ChatGPT-Video-Parsing: 本项目已接入ChatGPT和文生图服务(无需再代理和APIKey)，同时支持腾讯视频、爱奇艺、优酷、芒果TV、哔哩哔哩、网易云音乐等平台会员视频破解可在线解析和论文降重（目前仅适用于PC端，移动端适配暂未完成） - https://github.com/P1kaj1uu/ChatGPT-Video-Parsing
muratcankoylan/AI-Investigator: An automated AI system (Python framework) designed to analyze any type of website content and generate structured reports using Claude 3.5 Sonnet API and Firecrawl. While currently configured for enterprise AI case studies, the architecture can be adapted for various content analysis needs. - https://github.com/muratcankoylan/AI-Investigator
a16z-infra/JungleGym: An Open Source Playground with Agent Datasets and APIs for building and testing your own Autonomous Web Agents - https://github.com/a16z-infra/JungleGym
googleapis/repo-automation-bots: A collection of bots, based on probot, for performing common maintenance tasks across the open-source repos managed by Google on GitHub. - https://github.com/googleapis/repo-automation-bots
it-beard/tavily-server: AI-powered search capabilities for AI assistants using the Tavily API and Model Context Protocol (MCP) - https://github.com/it-beard/tavily-server
deepseek-ai/awesome-deepseek-integration: Integrate the DeepSeek API into popular softwares - https://github.com/deepseek-ai/awesome-deepseek-integration
Portkey-AI/gateway: A blazing fast AI Gateway with integrated guardrails. Route to 200+ LLMs, 50+ AI Guardrails with 1 fast & friendly API. - https://github.com/Portkey-AI/gateway
michaelthwan/searchGPT: Grounded search engine (i.e. with source reference) based on LLM / ChatGPT / OpenAI API. It supports web search, file content search etc. - https://github.com/michaelthwan/searchGPT
roelfrenkema/trainplicate: A python application to take care of your FLUX training through the replicate API - https://github.com/roelfrenkema/trainplicate
transitive-bullshit/agentic: Your API ⇒ Paid MCP. Instantly. - https://github.com/transitive-bullshit/agentic
firecrawl/firecrawl: The Web Data API for AI - Turn entire websites into LLM-ready markdown or structured data 🔥 - https://github.com/firecrawl/firecrawl
Twilight-Dream-Of-Magic/museair-cpp: A high-performance, non-cryptographic hashing algorithm written in C++. MuseAir offers fast, efficient hashing optimized for large datasets, with competitive performance compared to other popular algorithms like WyHash and RapidHash. Cross-platform support with thorough benchmarking. - https://github.com/Twilight-Dream-Of-Magic/museair-cpp
slcs-jsc/jurassic: The Juelich Rapid Spectral Simulation Code (JURASSIC) is a fast infrared radiative transfer model for the analysis of atmospheric remote sensing measurements. - https://github.com/slcs-jsc/jurassic
nidhaloff/b-rabbit: A thread safe library that aims to provide a simple API for interfacing with RabbitMQ. Built on top of rabbitpy, the library make it very easy to use the RabbitMQ message broker with just few lines of code. It implements all messaging pattern used by message brokers - https://github.com/nidhaloff/b-rabbit
navining/Zeus: A high performance, cross-platform Internet Communication Engine. Developed with native socket API. Aim at handling millions of concurrent connections. - https://github.com/navining/Zeus
tobegit3hub/miniflow: Minimal numerical computation library with TensorFlow APIs - https://github.com/tobegit3hub/miniflow
vkgnandhu177/Bayesian-Regression-and-Bitcoin: # Bayesian-Regression-to-Predict-Bitcoin-Price-Variations Predicting the price variations of bitcoin, a virtual cryptographic currency. These predictions could be used as the foundation of a bitcoin trading strategy. To make these predictions, we will have to familiarize ourself with a machine learning technique, Bayesian Regression, and implement this technique in Python.  # Datasets We have the datasets in the data folder. The original raw data can be found here: http://api.bitcoincharts.com/v1/csv/. The datasets from this site have three attributes:   (1) time in epoch,   (2) price in USD per bitcoin, and   (3) bitcoin amount in a transaction (buy/sell).   However, only the first two attributes are relevant to this project.  To make the data to have evenly space records, we took all the records within a 20 second window and replaced it by a single record as the average of all the transaction prices in that window. Not every 20 second window had a record; therefore those missing entries were filled using the prices of the previous 20 observations and assuming a Gaussian distribution. The raw data that has been cleaned is given in the file dataset.csv  Finally, as discussed in the paper, the data was divided into a total of 9 different datasets. The whole dataset is partitioned into three equally sized (50 price variations in each) subsets: train1, train2, and test. The train sets are used for training a linear model, while the test set is for evaluation of the model. There are three csv files associated with each subset of data: *_90.csv, *_180.csv, and *_360.csv. In _90.csv, for example, each line represents a vector of length 90 where the elements are 30 minute worth of bitcoin price variations (since we have 20 second intervals) and a price variation in the 91st column. Similarly, the *_180.csv represents 60 minutes of prices and *_360.csv represents 120 minutes of prices.  # Project Requirements We are expected to implement the Bayesian Regression model to predict the future price variation of bitcoin as described in the reference paper. The main parts to focus on are Equation 6 and the Predicting Price Change section.  # Logic in bitcoin.py 1. Compute the price variations (Δp1, Δp2, and Δp3) for train2 using train1 as input to the Bayesian Regression equation (Equations 6). Make sure to use the similarity metric (Equation 9) in place of the Euclidean distance in Bayesian Regression (Equation 6).  2. Compute the linear regression parameters (w0, w1, w2, w3) by finding the best linear fit (Equation 8). Here you will need to use the ols function of statsmodels.formula.api. Your model should be fit using Δp1, Δp2, and Δp3 as the covariates. Note: the bitcoin order book data was not available, so you do not have to worry about the rw4 term.  3. Use the linear regression model computed in Step 2 and Bayesian Regression estimates, to predict the price variations for the test dataset. Bayesian Regression estimates for test dataset are computed in the same way as they are computed for train2 dataset – using train1 as an input.  4. Once the price variations are predicted, compute the mean squared error (MSE) for the test dataset (the test dataset has 50 vectors => 50 predictions). - https://github.com/vkgnandhu177/Bayesian-Regression-and-Bitcoin
arc53/DocsGPT: Private AI platform for agents, assistants and enterprise search. Built-in Agent Builder, Deep research, Document analysis, Multi-model support, and API connectivity for agents. - https://github.com/arc53/DocsGPT
bentoml/BentoML: The easiest way to serve AI apps and models - Build Model Inference APIs, Job queues, LLM apps, Multi-model pipelines, and more! - https://github.com/bentoml/BentoML
BerriAI/litellm: Python SDK, Proxy Server (LLM Gateway) to call 100+ LLM APIs in OpenAI format - [Bedrock, Azure, OpenAI, VertexAI, Cohere, Anthropic, Sagemaker, HuggingFace, Replicate, Groq] - https://github.com/BerriAI/litellm
kimchiui/together-ai-dart: Dart SDK to interact with the Together AI API. - https://github.com/kimchiui/together-ai-dart
quantumlib/unitary: Open-source API library providing common operations for adding quantum behaviors to games. - https://github.com/quantumlib/unitary
weavechain/weave-py-api: Weavechain Python API - https://github.com/weavechain/weave-py-api
hebench/api-bridge: The HEBench API Bridge consists of a set of C headers that declare the C API which is used by the test harness to execute workloads implemented by backends. It also includes a C++ wrapper which offers a collection of pre-defined classes and functionality designed to ease the creation of backends by hiding boilerplate details required by the C API. - https://github.com/hebench/api-bridge
genxnetwork/confidential-ai-example: Example code that leverages Attested-TLS protocol (GENXT confido lib) to verify and access Confidential LLM API service. - https://github.com/genxnetwork/confidential-ai-example
menloresearch/cortex.cpp: Local AI API Platform - https://github.com/menloresearch/cortex.cpp
apitable/apitable: 🚀🎉📚 APITable, an API-oriented low-code platform for building collaborative apps and better than all other Airtable open-source alternatives.  - https://github.com/apitable/apitable
Tusharknwl/Lumina_AI: Lumina AI is a SaaS-based AI platform built with Next.js, Shadcn, Tailwind CSS, Clerk, and the OpenAI API. It offers various AI-powered features such as chatbot, image generation, code generation,video and music generation. - https://github.com/Tusharknwl/Lumina_AI
meilisearch/meilisearch: A lightning-fast search engine API bringing AI-powered hybrid search to your sites and applications. - https://github.com/meilisearch/meilisearch
rowyio/buildship: Low-code Visual Backend Builder, powered by AI ✨ Create APIs, scheduled jobs, backend tasks, database CRUD, and integrate with any tool or APIs. - https://github.com/rowyio/buildship
lmangani/chdb-GPT: Generate chDB and ClickHouse queries with ChatGPT/OpenAI APIs - https://github.com/lmangani/chdb-GPT
roapi/roapi: Create full-fledged APIs for slowly moving datasets without writing a single line of code. - https://github.com/roapi/roapi
rapidsai/cudf: cuDF - GPU DataFrame Library  - https://github.com/rapidsai/cudf
IBM-DSE/ClickStreamAnalysis: Sample Notebooks demonstrate a use case of Click Stream analysis with IBM EventStore using Scala APIs to ingest and analyze web event data. - https://github.com/IBM-DSE/ClickStreamAnalysis
NicoNex/echotron: An elegant and concurrent library for the Telegram bot API in Go. - https://github.com/NicoNex/echotron
AlgoTraders/stock-analysis-engine: Backtest 1000s of minute-by-minute trading algorithms for training AI with automated pricing data from: IEX, Tradier and FinViz. Datasets and trading performance automatically published to S3 for building AI training datasets for teaching DNNs how to trade. Runs on Kubernetes and docker-compose. >150 million trading history rows generated from +5000 algorithms. Heads up: Yahoo's Finance API was disabled on 2019-01-03 https://developer.yahoo.com/yql/ - https://github.com/AlgoTraders/stock-analysis-engine
moonstream-to/api: Building blocks for your blockchain economy - https://github.com/moonstream-to/api
LibRapid/librapid: A highly optimised C++ library for mathematical applications and neural networks. - https://github.com/LibRapid/librapid
rapidsai/rmm: RAPIDS Memory Manager - https://github.com/rapidsai/rmm
yym68686/ChatGPT-Telegram-Bot: TeleChat: 🤖️ an AI chat Telegram bot can Web Search Powered by GPT-5, DALL·E , Groq, Gemini 2.5 Pro/Flash and the official Claude4.1 API using Python on Zeabur, fly.io and Replit. - https://github.com/yym68686/ChatGPT-Telegram-Bot
brianpetro/obsidian-smart-connections: Chat with your notes & see links to related content with AI embeddings. Use local models or 100+ via APIs like Claude, Gemini, ChatGPT & Llama 3 - https://github.com/brianpetro/obsidian-smart-connections
rapidsai/raft: RAFT contains fundamental widely-used algorithms and primitives for machine learning and information retrieval. The algorithms are CUDA-accelerated and form building blocks for more easily writing high performance applications. - https://github.com/rapidsai/raft
rapidsai/cugraph: cuGraph - RAPIDS Graph Analytics Library - https://github.com/rapidsai/cugraph
PlatformLab/NanoLog: Nanolog is an extremely performant nanosecond scale logging system for C++ that exposes a simple printf-like API. - https://github.com/PlatformLab/NanoLog
parsecph/clobbr: ⚡️ A tool to check the speed and resilience of your API endpoints against multiple parallel or sequence requests. - https://github.com/parsecph/clobbr
jmsadair/RapidTrader: A low-latency, high-throughput order matching system implementation. - https://github.com/jmsadair/RapidTrader
apibara/dna: Apibara is the fastest platform to build production-grade indexers that connect onchain data to web2 services. - https://github.com/apibara/dna
philipperemy/FX-1-Minute-Data: HISTDATA - Dataset composed of all FX trading pairs / Crude Oil / Stock Indexes. Simple API to retrieve 1 Minute data (and tick data) Historical FX Prices (up to date). - https://github.com/philipperemy/FX-1-Minute-Data
comfyanonymous/ComfyUI: The most powerful and modular diffusion model GUI, api and backend with a graph/nodes interface. - https://github.com/comfyanonymous/ComfyUI
cluutch/half-baked-oracle: An on chain Solana oracle for the cluutch API - https://github.com/cluutch/half-baked-oracle
dsherret/ts-morph: TypeScript Compiler API wrapper for static analysis and programmatic code changes. - https://github.com/dsherret/ts-morph
getmaxun/maxun: ⚡ Easiest no code web data extraction platform • Instantly turn any website into API or spreadsheet ⚡ - https://github.com/getmaxun/maxun
assemble/assemble: Get the rocks out of your socks! Assemble makes you fast at web development! Used by thousands of projects for rapid prototyping, themes, scaffolds, boilerplates, e-books, UI components, API documentation, blogs, building websites/static site generator, an alternative to Jekyll for gh-pages and more! Gulp- and grunt-friendly.   - https://github.com/assemble/assemble
jellyfin/jellyfin: The Free Software Media System - Server Backend & API - https://github.com/jellyfin/jellyfin
