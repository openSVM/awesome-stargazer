# WEBASSEMBLY OTHER 1 (90 repositories)

babycommando/entity-db: EntityDB is an in-browser vector database wrapping indexedDB and Transformers.js over WebAssembly - https://github.com/babycommando/entity-db
tyfkda/xcc: Standalone C compiler/assembler/linker/libc for x86-64/aarch64/riscv64/wasm - https://github.com/tyfkda/xcc
ngxson/wllama: WebAssembly binding for llama.cpp - Enabling on-browser LLM inference - https://github.com/ngxson/wllama
jupyterlite/jupyterlite: Wasm powered Jupyter running in the browser üí° - https://github.com/jupyterlite/jupyterlite
airchains-network/airchains: A versatile and powerful framework for creating customized rollups with a variety of options. Our framework supports EVM, SVM, and CosmWasm-based rollups - https://github.com/airchains-network/airchains
bytecodealliance/javy: JS to WebAssembly toolchain - https://github.com/bytecodealliance/javy
tantaraio/voy: üï∏Ô∏èü¶Ä A WASM vector similarity search written in Rust - https://github.com/tantaraio/voy
bsergeev/MtMergeSort: Exploration of WebAssembly multi-threading on plain merge sort - https://github.com/bsergeev/MtMergeSort
zemlyansky/random-forest: Random forests ported to Javascript with WebAssembly and WebWorkers - https://github.com/zemlyansky/random-forest
takahirox/riscv-rust: RISC-V processor emulator written in Rust+WASM - https://github.com/takahirox/riscv-rust
ringtailsoftware/zig-wasm-audio-framebuffer: Examples of integrating Zig and Wasm (and C) for audio and graphics on the web - https://github.com/ringtailsoftware/zig-wasm-audio-framebuffer
cedricschwyter/spacey:  a tiny, wasm-ready virtual machine - stupidly fast - https://github.com/cedricschwyter/spacey
lrusso/PlayStation: PlayStation Emulator in JavaScript and WebAssembly - https://github.com/lrusso/PlayStation
fabmax/physx-js-webidl: Javascript WASM bindings for Nvidia PhysX - https://github.com/fabmax/physx-js-webidl
tinysearch/tinysearch: üîç Tiny, full-text search engine for static websites built with Rust and Wasm - https://github.com/tinysearch/tinysearch
ill-inc/biomes-game: Biomes is an open source sandbox MMORPG built for the web using web technologies such as Next.js, Typescript, React and WebAssembly. - https://github.com/ill-inc/biomes-game
zzhack-stack/zzhack-cli: üíª zzhack-cli is a Command Tool to help you quickly generate a WASM WebApp with simple configuration and zero code - https://github.com/zzhack-stack/zzhack-cli
DelphinusLab/zkwasm-mini-rollup: A Minimised REST service framework coded in WASM (RUST) and the full service runs in the ZKWASM - https://github.com/DelphinusLab/zkwasm-mini-rollup
DanRuta/GPGPU: Small library for running arbitrary computations on the GPU, using JavaScript or WebAssembly. - https://github.com/DanRuta/GPGPU
sycamore-rs/sycamore: A library for creating reactive web apps in Rust and WebAssembly - https://github.com/sycamore-rs/sycamore
futursolo/stylist-rs: A CSS-in-Rust styling solution for WebAssembly Applications - https://github.com/futursolo/stylist-rs
evgeny-nadymov/telegram-react: Experimental Telegram web client with tdlib, webassembly and react js under the hood - https://github.com/evgeny-nadymov/telegram-react
Cugatay/zig-wasm-react-nodejs: A Zig Wasm Project to Document The Way You Can Create a Small WASM Binary and Use It With  React & NodeJS - https://github.com/Cugatay/zig-wasm-react-nodejs
pluvial/vite-plugin-zig: Import Wasm modules compiled from Zig files - https://github.com/pluvial/vite-plugin-zig
lrusso/Emulatrix: Emulatrix - JavaScript and WebAssembly Emulator - Sega Genesis, Nintendo, Super Nintendo, GameBoy, GameBoy Color, GameBoy Advance, MAME32, DOSBox and Virtual Machines - https://github.com/lrusso/Emulatrix
zer011b/fdtd3d: fdtd3d is an open source 1D, 2D, 3D FDTD electromagnetics solver with MPI, OpenMP and CUDA support for x64, ARM, ARM64, RISC-V, PowerPC, Wasm architectures - https://github.com/zer011b/fdtd3d
fengb/fundude: Gameboy emulator: Zig -> wasm - https://github.com/fengb/fundude
capstone-engine/capstone: Capstone disassembly/disassembler framework for ARM, ARM64 (ARMv8), Alpha, BPF, Ethereum VM, HPPA, LoongArch, M68K, M680X, Mips, MOS65XX, PPC, RISC-V(rv32G/rv64G), SH, Sparc, SystemZ, TMS320C64X, TriCore, Webassembly, XCore and X86. - https://github.com/capstone-engine/capstone
thedavesims/Wormhole: A GBJAM9 entry written in C for the WASM-4 fantasy console. - https://github.com/thedavesims/Wormhole
axmolengine/axmol: Axmol Engine ‚Äì A Multi-platform Engine for Desktop, XBOX (UWP), WebAssembly and Mobile games. (a fork of Cocos2d-x-4.0) - https://github.com/axmolengine/axmol
w4-lander/w4-lander: A lunar-lander type retro video game, written in Zig for the WASM-4 fantasy console. - https://github.com/w4-lander/w4-lander
christopher-kleine/wasm-4-tutorial-games: A collection of small games for the Fantasy Console WASM-4 - https://github.com/christopher-kleine/wasm-4-tutorial-games
gamercade-io/gamercade_console: A Neo-Retro Fantasy Console. Make WASM-powered, networked multiplayer games. - https://github.com/gamercade-io/gamercade_console
jzeiber/wasm4-miniciv: Multiplayer Civilization type game for WASM-4 fantasy game console - https://github.com/jzeiber/wasm4-miniciv
jonathanderque/lingword: Lingword is a word-guessing game written in Zig for the WASM-4 fantasy console - https://github.com/jonathanderque/lingword
davidroman0O/wasm4-game-of-life: Zig implementation of the famous Conway's Game of Life - https://github.com/davidroman0O/wasm4-game-of-life
ibillingsley/wasm4-gamejam: One Slime Army is an arcade endless wave survival game for the WASM-4 fantasy console - https://github.com/ibillingsley/wasm4-gamejam
Askannz/munal-os: An experimental operating system fully written in Rust, with a unikernel design, cooperative scheduling and a security model based on WASM sandboxing. - https://github.com/Askannz/munal-os
dtolnay/watt: Runtime for executing procedural macros as WebAssembly - https://github.com/dtolnay/watt
maple3142/wasm-jseval: A safe eval library based on WebAssembly and Duktape/QuickJS. - https://github.com/maple3142/wasm-jseval
faasm/faasm: High-performance stateful serverless runtime based on WebAssembly - https://github.com/faasm/faasm
kylebarron/parquet-wasm: Rust-based WebAssembly bindings to read and write Apache Parquet data - https://github.com/kylebarron/parquet-wasm
Vision-DAO/vision-os: A portable WebAssembly environment for scalable, multiplexed web3 applications. - https://github.com/Vision-DAO/vision-os
Robbepop/runwell: An experimental WebAssembly virtual machine. - https://github.com/Robbepop/runwell
tinygo-org/tinygo: Go compiler for small places. Microcontrollers, WebAssembly (WASM/WASI), and command-line tools. Based on LLVM. - https://github.com/tinygo-org/tinygo
leostera/lam: :rocket: a lightweight, universal actor-model vm for writing scalable and reliable applications that run natively and on WebAssembly - https://github.com/leostera/lam
GetFirefly/firefly: An alternative BEAM implementation, designed for WebAssembly - https://github.com/GetFirefly/firefly
bytecodealliance/wamr-app-framework: WebAssembly Micro Runtime Application Framework - https://github.com/bytecodealliance/wamr-app-framework
tsoding/snake-c-wasm: Snake written in Pure C and compilable to WebAssembly - https://github.com/tsoding/snake-c-wasm
skanehira/chibiwasm: A small Wasm Runtime - https://github.com/skanehira/chibiwasm
andytango/mupdf-js: üì∞ Yet another Webassembly PDF renderer for node and the browser  - https://github.com/andytango/mupdf-js
wasmx/fizzy: Fizzy aims to be a fast, deterministic, and pedantic WebAssembly interpreter written in C++. - https://github.com/wasmx/fizzy
WasmVM/WasmVM: A standalone WebAssembly process virtual machine - https://github.com/WasmVM/WasmVM
mbasso/wasm-worker: Move a WebAssembly module into its own thread - https://github.com/mbasso/wasm-worker
thomscoder/luna: üåô A really tiny WebAssembly compiler for demonstration and educational purposes. Written in Go and built as one of my quests to conquer the WebAssembly dungeon - https://github.com/thomscoder/luna
ccoreilly/vosk-browser: A speech recognition library running in the browser thanks to a WebAssembly build of Vosk - https://github.com/ccoreilly/vosk-browser
tbfleming/cib: clang running in browser (wasm) - https://github.com/tbfleming/cib
snaplet/postgres-wasm: A PostgresQL server running in your browser - https://github.com/snaplet/postgres-wasm
bytecodealliance/wasm-micro-runtime: WebAssembly Micro Runtime (WAMR) - https://github.com/bytecodealliance/wasm-micro-runtime
ffmpegwasm/ffmpeg.wasm: FFmpeg for browser, powered by WebAssembly - https://github.com/ffmpegwasm/ffmpeg.wasm
js-emulators/wasmpsx: A fork of TJWei's PlayStation emulator to use for your own purposes. - https://github.com/js-emulators/wasmpsx
aras-p/ToyPathTracer: Toy path tracer for my own learning purposes (CPU/GPU, C++/C#, Win/Mac/Wasm, DX11/Metal, also Unity) - https://github.com/aras-p/ToyPathTracer
duckdb/duckdb-wasm: WebAssembly version of DuckDB - https://github.com/duckdb/duckdb-wasm
oluceps/c2wib: Compile bpf program to WebAssembly in browser with clang wasm bin - https://github.com/oluceps/c2wib
microsoft/aici: AICI: Prompts as (Wasm) Programs - https://github.com/microsoft/aici
datawan-labs/pg: In Browser PostgreSQL Playground, no server, just client and pglite (postgresql wasm) - https://github.com/datawan-labs/pg
pmuens/time-lock-puzzle: Time-Lock Puzzle schemes implemented in Go and compiled to WebAssembly - https://github.com/pmuens/time-lock-puzzle
kamakiri01/qulacs-wasm: Quantum Circuit Simulator for browser and Node.js, powered by WebAssembly - https://github.com/kamakiri01/qulacs-wasm
d3k4z/kyber512wasm: Introducing PQ crypto to the web - https://github.com/d3k4z/kyber512wasm
tniessen/node-pqclean: PQClean for Node.js, Deno, and browsers üîèüîë Node.js native addon and WebAssembly implementation - https://github.com/tniessen/node-pqclean
RingsNetwork/rings: Rings is a structured peer-to-peer network implementation using WebRTC, Chord DHT, and full WebAssembly (WASM) support. - https://github.com/RingsNetwork/rings
EulerSmile/prize-wasm-msm: ZPrize competition MSM for WASM - https://github.com/EulerSmile/prize-wasm-msm
sagemathinc/cowasm: CoWasm: Collaborative WebAssembly for Servers and Browsers.   Built using Zig.  Supports Python with extension modules, including numpy.  - https://github.com/sagemathinc/cowasm
xonoxitron/zk-wasm: üîí ZK-WASM: Zero-Knowledge Proofs in Rust ü¶Ä, compiled to WebAssembly üï∏Ô∏è, bridged with JavaScript üöÄ - https://github.com/xonoxitron/zk-wasm
vmware-labs/wasm-workers-server: üöÄ Develop and run serverless applications on WebAssembly - https://github.com/vmware-labs/wasm-workers-server
denosaurs/netsaur: Powerful Powerful Machine Learning library with GPU, CPU and WASM backends - https://github.com/denosaurs/netsaur
plotters-rs/plotters: A rust drawing library for high quality data plotting for both WASM and native, statically and realtimely ü¶Ä üìàüöÄ - https://github.com/plotters-rs/plotters
second-state/netlify-wasm-runtime: A template project for building high-performance, portable, and safe serverless functions in Netlify. - https://github.com/second-state/netlify-wasm-runtime
timhutton/sdl-canvas-wasm: Minimal example of animating the HTML5 canvas from C++ using SDL through WebAssembly  - https://github.com/timhutton/sdl-canvas-wasm
radiant-labs/radiantkit: Cross-platform open-source framework to build graphics applications (like Figma, Canva, Miro, etc). Uses Rust, Wasm, wgpu and epaint. - https://github.com/radiant-labs/radiantkit
extism/extism: The framework for building with WebAssembly (wasm). Easily & securely load wasm modules, move data, call functions, and build extensible apps. - https://github.com/extism/extism
appcypher/awesome-wasm-runtimes: A list of webassemby runtimes - https://github.com/appcypher/awesome-wasm-runtimes
patriciogonzalezvivo/vera: C++/WASM GL Framework - https://github.com/patriciogonzalezvivo/vera
appcypher/awesome-wasm-langs: üòé A curated list of languages that compile directly to or have their VMs in WebAssembly - https://github.com/appcypher/awesome-wasm-langs
marlinprotocol/oyster-serverless: Oyster Serverless is a cutting-edge, high-performance serverless computing platform designed to securely execute JavaScript (JS) and WebAssembly (WASM) code in a highly controlled environment. - https://github.com/marlinprotocol/oyster-serverless
fermyon/enterprise-architectures-and-patterns: Collection of Enterprise Architectures & Patterns built with Spin and WebAssembly - https://github.com/fermyon/enterprise-architectures-and-patterns
bytecodealliance/wizer: The WebAssembly Pre-Initializer - https://github.com/bytecodealliance/wizer
spinframework/spin: Spin is the open source developer tool for building and running serverless applications powered by WebAssembly. - https://github.com/spinframework/spin
WebAssembly/wasi-threads:  - https://github.com/WebAssembly/wasi-threads
mbasso/awesome-wasm: üòé Curated list of awesome things regarding the WebAssembly (wasm) ecosystem. - https://github.com/mbasso/awesome-wasm
