# LOCK FREE (46 repositories)

pramalhe/RedoDB: The world's first wait-free KV store with generic durable linearizable transactions - https://github.com/pramalhe/RedoDB
Atomic-man007/Awesome_Multimodel_LLM: Awesome_Multimodel is a curated GitHub repository that provides a comprehensive collection of resources for Multimodal Large Language Models (MLLM). It covers datasets, tuning techniques, in-context learning, visual reasoning, foundational models, and more. Stay updated with the latest advancement. - https://github.com/Atomic-man007/Awesome_Multimodel_LLM
BrainBlend-AI/atomic-agents: Building AI agents, atomically - https://github.com/BrainBlend-AI/atomic-agents
mit-carbon/Flat-Combining: Traditional data-structure designs, whether lock-based or lock-free, provide parallelism via fine grained synchronization among threads. Flat Combining is a new, efficient synchronization paradigm based on coarse locking. - https://github.com/mit-carbon/Flat-Combining
timstr/atomicslice: A rust library for sharing and updating arbitrary slices between threads, optimized for wait-free reads - https://github.com/timstr/atomicslice
BitairLabs/concurrent.js: Non-blocking Concurrent Computation for JavaScript RTEs (Web Browsers, Node.js, Deno & Bun) - https://github.com/BitairLabs/concurrent.js
jdee/AtomicValue: Fast synchronization primitives for C++ - https://github.com/jdee/AtomicValue
concurrencykit/ck: Concurrency primitives, safe memory reclamation mechanisms and non-blocking (including lock-free) data structures designed to aid in the research, design and implementation of high performance concurrent systems developed in C99+. - https://github.com/concurrencykit/ck
robclu/leapfrog: Lock-free concurrent and single-threaded hash map implementations using Leapfrog probing. Currently the highest performance concurrent HashMap in Rust for certain use cases. - https://github.com/robclu/leapfrog
mulle-concurrent/mulle-concurrent: ðŸ“¶ A lock- and wait-free hashtable (and an array too) - https://github.com/mulle-concurrent/mulle-concurrent
danlentz/cl-ctrie: lock-free, concurrent, key/value index with efficient memory-mapped persistence and fast transient storage models - https://github.com/danlentz/cl-ctrie
blue-build/cli: BlueBuild's command line program that builds custom Fedora Atomic images based on your recipe.yml - https://github.com/blue-build/cli
Ellipsis-Labs/phoenix-v1: On-chain order book that atomically settles trades - https://github.com/Ellipsis-Labs/phoenix-v1
atomicdata-dev/atomic-server: An open source headless CMS / real-time database. Powerful table editor, full-text search, and SDKs for JS / React / Svelte. - https://github.com/atomicdata-dev/atomic-server
spacejam/tla-rust: writing correct lock-free and distributed stateful systems in Rust, assisted by TLA+ - https://github.com/spacejam/tla-rust
Skippia/asynchronous-nodejs-playground: Event loop tasks, async debugging, baseline performance(libuv), worker threads, workepools, multiprocessing(clustering), semaphores, mutexes, atomics - https://github.com/Skippia/asynchronous-nodejs-playground
coreos/rpm-ostree: âš›ðŸ“¦ Hybrid image/package system with atomic upgrades and package layering - https://github.com/coreos/rpm-ostree
al8n/skipdb: An embedded, in-memory, zero-copy, atomicity, consistency, isolation, MVCC, almost lock-free and serializable snapshot isolation database engine. - https://github.com/al8n/skipdb
isaac-svg/realtime-non-blocking-data-streaming: This project demonstrates a Node.js application that streams gigabytes of data to the frontend without blocking the event loop. The application supports pausing and resuming the stream, and allows for additional network requests and other operations while streaming is ongoing. - https://github.com/isaac-svg/realtime-non-blocking-data-streaming
ExpidusOS-archive/atomic: An embedded modular operating system written in Zig and capable of running WASM programs. - https://github.com/ExpidusOS-archive/atomic
al8n/rarena: Lock-free ARENA allocator and a set of lock-free data structures based on the ARENA allocator. - https://github.com/al8n/rarena
rigtorp/awesome-lockfree: A collection of resources on wait-free and lock-free programming - https://github.com/rigtorp/awesome-lockfree
palkan/isolator: Detect non-atomic interactions within DB transactions - https://github.com/palkan/isolator
atomic-studio-org/Atomic-Studio: Operating system based on Fedora Atomic meant for content creators and artists - https://github.com/atomic-studio-org/Atomic-Studio
gokatas/lognb: non-blocking concurrent logging - https://github.com/gokatas/lognb
cloudflare/mmap-sync: Rust library for concurrent data access, using memory-mapped files, zero-copy deserialization, and wait-free synchronization. - https://github.com/cloudflare/mmap-sync
noelmiller/isengard: Custom Fedora Atomic Image for my Desktop and Laptop. This is my take on what the modern Linux Desktop should look like. - https://github.com/noelmiller/isengard
cameron314/concurrentqueue: A fast multi-producer, multi-consumer lock-free concurrent queue for C++11 - https://github.com/cameron314/concurrentqueue
honungsburk/atomic-swap: A trustless p2p trading dApp on Cardano - https://github.com/honungsburk/atomic-swap
wvwwvwwv/scalable-delayed-dealloc: Scalable and lock-free memory reclamation system - https://github.com/wvwwvwwv/scalable-delayed-dealloc
kocircuit/kocircuit: Ko: A generic type-safe language for concurrent, stateful, deadlock-free systems and protocol manipulations - https://github.com/kocircuit/kocircuit
edo-pasto/Parallel-Flexible-Clustering: The thesis presents the parallelisation of a state-of-the art clustering algorithm, FISHDBC. This objective has been achived by improving the main data structures and components of the algorithm: HNSW, MST and HDBSCAN. My contribution is based on a lock-free strategy, completely wrote in Python. - https://github.com/edo-pasto/Parallel-Flexible-Clustering
SarthakMakhija/zig-ring-buffer: Tiny concurrent RingBuffer in Zig to understand atomics and memory ordering. - https://github.com/SarthakMakhija/zig-ring-buffer
judofyr/libxev: libxev is a cross-platform, high-performance event loop that provides abstractions for non-blocking IO, timers, events, and more and works on Linux (io_uring or epoll), macOS (kqueue), and Wasm + WASI. Available as both a Zig and C API. - https://github.com/judofyr/libxev
mitchellh/libxev: libxev is a cross-platform, high-performance event loop that provides abstractions for non-blocking IO, timers, events, and more and works on Linux (io_uring or epoll), macOS (kqueue), and Wasm + WASI. Available as both a Zig and C API. - https://github.com/mitchellh/libxev
Malix-Labs/Awesome-Atomic: An awesome curated knowledge-base about atomic systems - https://github.com/Malix-Labs/Awesome-Atomic
max0x7ba/atomic_queue: C++14 lock-free queue. - https://github.com/max0x7ba/atomic_queue
iqbalmorshed/lock-free-bst: lock-free Binary Search Tree data-structure which allows efficient concurrent set operations. Lock freedom guarantees that some of the concurrent operations are executed in a finite number of steps. - https://github.com/iqbalmorshed/lock-free-bst
mpoeter/xenium: A C++ library providing various concurrent data structures and reclamation schemes. - https://github.com/mpoeter/xenium
DNedic/lockfree: A collection of lock-free data structures written in standard C++11 - https://github.com/DNedic/lockfree
aarc-rs/aarc: Atomically updatable variants of Arc and Weak for lock-free concurrency. - https://github.com/aarc-rs/aarc
komora-io/concurrent-map: lock-free B+ tree - https://github.com/komora-io/concurrent-map
jonhoo/left-right: A lock-free, read-optimized, concurrency primitive. - https://github.com/jonhoo/left-right
Lingxi-Li/lock_free: C++17 lock-free data structure library - https://github.com/Lingxi-Li/lock_free
alorthius/libmtds: Collection of the concurrent data structures - https://github.com/alorthius/libmtds
Code_Editors_atomic: 4 repos
