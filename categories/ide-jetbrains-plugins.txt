# IDE JETBRAINS PLUGINS (47 repositories)

Citizen-Group/SteelRain-Ideas: This is a special repository used to store ideas, project management publicly, and to engage with fans. - https://github.com/Citizen-Group/SteelRain-Ideas
Miyamura80/tinyAcceleratedEVM: A gymnax based EVM simulator written in the JAX machine learning framework. The idea is to write an EVM simulator that can be parallelized and gain significant performance boosts on the accelerated hardware such GPU/TPU.  - https://github.com/Miyamura80/tinyAcceleratedEVM
jasonmanesis/Satellite-Imagery-Datasets-Containing-Ships: This repository provides a comprehensive list of radar and optical satellite datasets curated for ship detection, classification, semantic segmentation, and instance segmentation tasks. These datasets are ideal for applications in computer vision, machine learning, remote sensing, and maritime analysis.  - https://github.com/jasonmanesis/Satellite-Imagery-Datasets-Containing-Ships
renning22/engy: Engy is an AI-powered development tool that generates fully functional web applications from natural language, streamlining the process from idea to working prototype. - https://github.com/renning22/engy
OthersideAI/self-operating-computer: A framework to enable multimodal models to operate a computer. - https://github.com/OthersideAI/self-operating-computer
jwest951227/aiSocialGood: The rise of social media and online communities creates safe and anonymous spaces for individuals to share their thoughts about their mental health and express their feelings and sufferings in online communities. To prevent suicide, it is necessary to detect suicide-related posts and user's suicide ideation in cyberspace by natural language process - https://github.com/jwest951227/aiSocialGood
vkgnandhu177/Bayesian-Regression-and-Bitcoin: # Bayesian-Regression-to-Predict-Bitcoin-Price-Variations Predicting the price variations of bitcoin, a virtual cryptographic currency. These predictions could be used as the foundation of a bitcoin trading strategy. To make these predictions, we will have to familiarize ourself with a machine learning technique, Bayesian Regression, and implement this technique in Python.  # Datasets We have the datasets in the data folder. The original raw data can be found here: http://api.bitcoincharts.com/v1/csv/. The datasets from this site have three attributes:   (1) time in epoch,   (2) price in USD per bitcoin, and   (3) bitcoin amount in a transaction (buy/sell).   However, only the first two attributes are relevant to this project.  To make the data to have evenly space records, we took all the records within a 20 second window and replaced it by a single record as the average of all the transaction prices in that window. Not every 20 second window had a record; therefore those missing entries were filled using the prices of the previous 20 observations and assuming a Gaussian distribution. The raw data that has been cleaned is given in the file dataset.csv  Finally, as discussed in the paper, the data was divided into a total of 9 different datasets. The whole dataset is partitioned into three equally sized (50 price variations in each) subsets: train1, train2, and test. The train sets are used for training a linear model, while the test set is for evaluation of the model. There are three csv files associated with each subset of data: *_90.csv, *_180.csv, and *_360.csv. In _90.csv, for example, each line represents a vector of length 90 where the elements are 30 minute worth of bitcoin price variations (since we have 20 second intervals) and a price variation in the 91st column. Similarly, the *_180.csv represents 60 minutes of prices and *_360.csv represents 120 minutes of prices.  # Project Requirements We are expected to implement the Bayesian Regression model to predict the future price variation of bitcoin as described in the reference paper. The main parts to focus on are Equation 6 and the Predicting Price Change section.  # Logic in bitcoin.py 1. Compute the price variations (Œîp1, Œîp2, and Œîp3) for train2 using train1 as input to the Bayesian Regression equation (Equations 6). Make sure to use the similarity metric (Equation 9) in place of the Euclidean distance in Bayesian Regression (Equation 6).  2. Compute the linear regression parameters (w0, w1, w2, w3) by finding the best linear fit (Equation 8). Here you will need to use the ols function of statsmodels.formula.api. Your model should be fit using Œîp1, Œîp2, and Œîp3 as the covariates. Note: the bitcoin order book data was not available, so you do not have to worry about the rw4 term.  3. Use the linear regression model computed in Step 2 and Bayesian Regression estimates, to predict the price variations for the test dataset. Bayesian Regression estimates for test dataset are computed in the same way as they are computed for train2 dataset ‚Äì using train1 as an input.  4. Once the price variations are predicted, compute the mean squared error (MSE) for the test dataset (the test dataset has 50 vectors => 50 predictions). - https://github.com/vkgnandhu177/Bayesian-Regression-and-Bitcoin
ixahmedxi/orbitkit: üöÄ Orbitkit is a monorepo starterkit aiming to be the foundation you build your next startup or big idea upon. - https://github.com/ixahmedxi/orbitkit
GPTStonks/gptstonks: GPTStonks is a financial chatbot powered by LLMs and enhanced with data frameworks. It provides natural language conversation capabilities for financial topics, making it an ideal choice for a wide range of financial applications. - https://github.com/GPTStonks/gptstonks
microsoft/qlib: Qlib is an AI-oriented Quant investment platform that aims to use AI tech to empower Quant Research, from exploring ideas to implementing productions. Qlib supports diverse ML modeling paradigms, including supervised learning, market dynamics modeling, and RL, and is now equipped with https://github.com/microsoft/RD-Agent to automate R&D process. - https://github.com/microsoft/qlib
JetBrains/intellij-community: IntelliJ IDEA & IntelliJ Platform - https://github.com/JetBrains/intellij-community
cmacrae/spacebar: A minimal status bar for macOS. Ideal for use with tiling window managers like yabai - https://github.com/cmacrae/spacebar
impress/impress.js: It's a presentation framework based on the power of CSS3 transforms and transitions in modern browsers and inspired by the idea behind prezi.com. - https://github.com/impress/impress.js
codespaces-examples/base: A basic Codespaces environment that can be expanded upon to build your ideal environment - https://github.com/codespaces-examples/base
M64GitHub/libtsprites: C++ shared library for truecolor unicode terminal sprites, effects, and animations. Blazingly fast 2.5D parallax rendering engine! Ideal for terminal games, or just more interesting user interfaces. - https://github.com/M64GitHub/libtsprites
brutal-org/brutal: üè¢ An operating system inspired by brutalist design that combines the ideals of UNIX from the 1970s with modern technology and engineering  - https://github.com/brutal-org/brutal
TalonFloof/zorroOS: A hobby operating system written in Zig & C that reimagines classic UNIX ideas for modern technology - https://github.com/TalonFloof/zorroOS
SamuelSchmidgall/AgentLaboratory: Agent Laboratory is an end-to-end autonomous research workflow meant to assist you as the human researcher toward implementing your research ideas - https://github.com/SamuelSchmidgall/AgentLaboratory
0chain/0chain: Z√ºs (formerly 0Chain) is a decentralized blockchain-based storage platform with no vendor lock-in and a 3-layer security - fragmentation, proxy re-encryption, and immutability. It has close to wire speed data performance, free reads, and is ideal for apps as well as backups, AI data, disaster recovery. - https://github.com/0chain/0chain
web3privacy/web3privacy: Web3Privacy Now is a research project aimed at building a culture of privacy industry in web3: the most extensive database of privacy-enhancing solutions, the framework for PEDApps ideation, use-cases database & many more. Feel free to collaborate. - https://github.com/web3privacy/web3privacy
ideawu/ssdb: SSDB - A fast NoSQL database, an alternative to Redis - https://github.com/ideawu/ssdb
labring/laf: Laf is a vibrant cloud development platform that provides essential tools like cloud functions, databases, and storage solutions. It enables developers to quickly unleash their creativity and bring innovative ideas to life with ease. - https://github.com/labring/laf
ideawu/cpy:  Cpy provides you a way to write Python codes in C syntax! 	 - https://github.com/ideawu/cpy
IsaacWoods/poplar: Toy microkernel and userspace written in Rust, exploring modern ideas - https://github.com/IsaacWoods/poplar
jainaman224/Algo_Ds_Notes: A comprehensive resource for learning and implementing algorithms and data structures. This repository includes detailed notes, complexity analysis, and code examples in C++, Java, Python, and more. Ideal for students, professionals, and those preparing for coding interviews.  - https://github.com/jainaman224/Algo_Ds_Notes
jdaviderb/solana-native-program-template: Simplify your Solana Native Program development with this easy-to-use template. Ideal for developers seeking a simple, efficient development process without the need for frameworks like Anchor. - https://github.com/jdaviderb/solana-native-program-template
contextfreecode/abstractions: Abstractions, ideally zero cost, in multiple languages - https://github.com/contextfreecode/abstractions
OpenBMB/ChatDev: Create Customized Software using Natural Language Idea (through LLM-powered Multi-Agent Collaboration) - https://github.com/OpenBMB/ChatDev
ZigIDE/ZigZen: ZigZen: Zig IDE on top of the IntelliJ Platform - https://github.com/ZigIDE/ZigZen
arpan491/API-RateLimiter: A Go-based distributed rate-limiting library using Redis, supporting Token Bucket, Leaky Bucket, Sliding Window, and Counter algorithms. It's lightweight, scalable, and thread-safe, ideal for API throttling with minimal overhead. - https://github.com/arpan491/API-RateLimiter
session-replay-tools/tcpcopy: An online request replication and TCP stream replay tool, ideal for real testing, performance testing, stability testing, stress testing, load testing, smoke testing, and more. - https://github.com/session-replay-tools/tcpcopy
adamisntdead/qics: Javascript Idealistic Quantum Computer SImulation Library - https://github.com/adamisntdead/qics
Alisah-Ozcan/HEonGPU: HEonGPU is a high-performance library that optimizes Fully Homomorphic Encryption (FHE) on GPUs. Leveraging GPU parallelism, it reduces computational load through concurrent execution. Its multi-stream architecture minimizes data transfer overhead, making it ideal for large-scale encrypted computations with reduced latency. - https://github.com/Alisah-Ozcan/HEonGPU
paoda/hamt: Hash Array Mapped Trie as defined in Phil Bagwell (2001). Ideal Hash Tries   - https://github.com/paoda/hamt
motion-canvas/motion-canvas: Visualize Your Ideas With Code - https://github.com/motion-canvas/motion-canvas
rburkholder/trade-frame: C++ 17 based library (with sample applications) for testing equities, futures, currencies, etfs & options based automated trading ideas using DTN IQFeed real time data feed and Interactive Brokers (IB TWS API) for trade execution. libtorch/lstm/cuda demo. Support for Alpaca & Phemex. Notifications via Telegram. - https://github.com/rburkholder/trade-frame
solana-developers/awesome-blinks: Awesome Blinks and Solana Actions - Looking for Blink ideas? Check out the Ideas discussion board too - https://github.com/solana-developers/awesome-blinks
pe049395/Market-Making: Repository for market making ideas - https://github.com/pe049395/Market-Making
ideawu/c1000k: A tool to test if your OS supports 1 million connections(c1000k/c1m) - https://github.com/ideawu/c1000k
StrataFoundation/strata: Strata Protocol is an open-source protocol to launch tokens around a person, project, idea, or collective on Solana. - https://github.com/StrataFoundation/strata
ashvardanian/scaling-democracy: GPU-accelerated Schulze voting method in Python, Numba, and CUDA, using ideas from Algebraic Graph Theory - https://github.com/ashvardanian/scaling-democracy
BabitMF/bmf: Cross-platform, customizable multimedia/video processing framework.  With strong GPU acceleration, heterogeneous design, multi-language support, easy to use, multi-framework compatible and high performance, the framework is ideal for transcoding, AI inference, algorithm integration, live video streaming, and more. - https://github.com/BabitMF/bmf
zipxing/rust_pixel: Rust 2d game engine, ideal for developing mini-games&app, support terminal, sdl, web modes. - https://github.com/zipxing/rust_pixel
alexrichterxyz/research_limit_order_book: This C++ matching engine boasts a user friendly, efficient, yet highly customizable interface making it ideal for simulation and research purposes. - https://github.com/alexrichterxyz/research_limit_order_book
open-source-ideas/ideas: üí° Looking for inspiration for your next open source project? Or perhaps you've got a brilliant idea you can't wait to share with others? Open Source Ideas is a community built specifically for this! üëã - https://github.com/open-source-ideas/ideas
seyhajin/webgpu-wasm-zig: üöÄ A minimal WebGPU example written in Zig, compiled to WebAssembly (wasm). üõ†Ô∏è Ideal for experimenting and preparing for native development without install dependencies (dawn, wgpu-rs). - https://github.com/seyhajin/webgpu-wasm-zig
anticode-dev/stupidly-simple-eth: You know, a client that is not pretending to be the most feature complete or the fastest one, but ideally the one that is so easy to to use it makes prototyping extremely fast (and fun). - https://github.com/anticode-dev/stupidly-simple-eth
