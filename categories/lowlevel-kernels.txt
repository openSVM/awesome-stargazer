# LOWLEVEL KERNELS (87 repositories)

xlite-dev/LeetCUDA: 📚LeetCUDA: Modern CUDA Learn Notes with PyTorch for Beginners🐑, 200+ CUDA Kernels, Tensor Cores, HGEMM, FA-2 MMA.🎉 - https://github.com/xlite-dev/LeetCUDA
Zouuup/landrun: Run any Linux process in a secure, unprivileged sandbox using Landlock. Think firejail, but lightweight, user-friendly, and baked into the kernel. - https://github.com/Zouuup/landrun
linkedin/Liger-Kernel: Efficient Triton Kernels for LLM Training - https://github.com/linkedin/Liger-Kernel
cactus-compute/cactus: Kernels & AI inference engine for phone chips - https://github.com/cactus-compute/cactus
flashinfer-ai/flashinfer: FlashInfer: Kernel Library for LLM Serving - https://github.com/flashinfer-ai/flashinfer
deepseek-ai/FlashMLA: FlashMLA: Efficient MLA kernels - https://github.com/deepseek-ai/FlashMLA
Liu-xiandong/How_to_optimize_in_GPU: This is a series of GPU optimization topics. Here we will introduce  how to optimize the CUDA kernel in detail.  I will introduce several basic kernel optimizations, including: elementwise, reduce, sgemv, sgemm, etc. The performance of these kernels is basically at or near the theoretical limit. - https://github.com/Liu-xiandong/How_to_optimize_in_GPU
google-research/sputnik: A library of GPU kernels for sparse matrix operations. - https://github.com/google-research/sputnik
psankar/simplefs: A simple, kernel-space, on-disk filesystem from the scratch - https://github.com/psankar/simplefs
kmesh-net/kmesh: High Performance ServiceMesh Data Plane Based on eBPF and Programmable Kernel - https://github.com/kmesh-net/kmesh
ciao-lang/ciao: Ciao is a modern Prolog implementation that builds up from a logic-based simple kernel designed to be portable, extensible, and modular. - https://github.com/ciao-lang/ciao
obhq/obliteration: Experimental free and open-source PlayStation 4 kernel - https://github.com/obhq/obliteration
Askannz/munal-os: An experimental operating system fully written in Rust, with a unikernel design, cooperative scheduling and a security model based on WASM sandboxing. - https://github.com/Askannz/munal-os
janroesner/sixty5o2: Micro Kernel / Bootloader for Ben Eater's 6502 Computer - https://github.com/janroesner/sixty5o2
microsoft/WSL2-Linux-Kernel: The source for the Linux kernel used in Windows Subsystem for Linux 2 (WSL2) - https://github.com/microsoft/WSL2-Linux-Kernel
pritamzope/OS: Writing & Making Operating System and Kernel parts so simple like Hello World Programs, Starting from writing Bootloaders, Hello World Kernel, GDT, IDT, Terminal, Keyboard/Mouse, Memory Manager, HDD ATA R/W, VGA/VESA Graphics - https://github.com/pritamzope/OS
Gui774ume/krie: Linux Kernel Runtime Integrity with eBPF - https://github.com/Gui774ume/krie
Solo5/solo5: A sandboxed execution environment for unikernels - https://github.com/Solo5/solo5
nanovms/ops: ops - build and run nanos unikernels - https://github.com/nanovms/ops
mach-kernel/launchk: Rust/Cursive TUI for looking at launchd agents and daemons - https://github.com/mach-kernel/launchk
nicolargo/glances: Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems. - https://github.com/nicolargo/glances
lux-operating-system/kernel: Portable asynchronous microkernel with multiprocessor priority scheduling and Unix-like abstractions - https://github.com/lux-operating-system/kernel
unikraft/kraftkit: Build and use highly customized and ultra-lightweight unikernel VMs. - https://github.com/unikraft/kraftkit
Supercip971/WingOS: a little 64bit microkernel based operating system written in c++ with smp support  - https://github.com/Supercip971/WingOS
CorruptedByCPU/Cyjon: A simple, clean code, multi-tasking kernel written in pure Assembly language for 64-bit processors from the AMD64 family. - https://github.com/CorruptedByCPU/Cyjon
HelenOS/helenos: A portable microkernel-based multiserver operating system written from scratch. - https://github.com/HelenOS/helenos
vvaltchev/tilck: A Tiny Linux-Compatible Kernel - https://github.com/vvaltchev/tilck
nixos-bsd/nixbsd: An unofficial NixOS fork with a FreeBSD kernel - https://github.com/nixos-bsd/nixbsd
hermit-os/kernel: A Rust-based, lightweight unikernel. - https://github.com/hermit-os/kernel
microsoft/antares: Antares: an automatic engine for multi-platform kernel generation and optimization. Supporting CPU, CUDA, ROCm, DirectX12, GraphCore, SYCL for CPU/GPU, OpenCL for AMD/NVIDIA, Android CPU/GPU backends. - https://github.com/microsoft/antares
Orange-OpenSource/bmc-cache: In-kernel cache based on eBPF. - https://github.com/Orange-OpenSource/bmc-cache
robur-coop/albatross: Albatross: orchestrate and manage MirageOS unikernels with Solo5 - https://github.com/robur-coop/albatross
hengyoush/kyanos: Kyanos is a networking analysis tool using eBPF. It can visualize the time packets spend in the kernel, capture requests/responses, makes troubleshooting more efficient. - https://github.com/hengyoush/kyanos
includeos/IncludeOS: A minimal, resource efficient unikernel for cloud services - https://github.com/includeos/IncludeOS
mirage/mirage: MirageOS is a library operating system that constructs unikernels - https://github.com/mirage/mirage
MaciekLeks/bebok: A 64-bit kernel (and eventually an operating system) written in Zig, currently targeting x86_64. Utilizes Limine as a bootloader. - https://github.com/MaciekLeks/bebok
opiran-club/VPS-Optimizer: Linux Optimizer One-click bash script , swap maker and bbr tcp congestion control , xanmod kernel and bbrv3 - https://github.com/opiran-club/VPS-Optimizer
ScalingIntelligence/KernelBench: KernelBench: Can LLMs Write GPU Kernels? - Benchmark with Torch -> CUDA problems - https://github.com/ScalingIntelligence/KernelBench
andrewrk/HellOS: "hello world" x86 kernel example - https://github.com/andrewrk/HellOS
spcl/open-earth-benchmarks: Open repository for climate and weather benchmark kernels - https://github.com/spcl/open-earth-benchmarks
danijelaskov/microkernel: An implementation of a small, but fully functional multithreaded operating system kernel with time sharing. - https://github.com/danijelaskov/microkernel
sysprog21/concurrent-programs: Complementary Concurrency Programs for course "Linux Kernel Internals" - https://github.com/sysprog21/concurrent-programs
cilium/ebpf: ebpf-go is a pure-Go library to read, modify and load eBPF programs and attach them to various hooks in the Linux kernel. - https://github.com/cilium/ebpf
seL4/seL4: The seL4 microkernel - https://github.com/seL4/seL4
NVIDIA/nvbench: CUDA Kernel Benchmarking Library - https://github.com/NVIDIA/nvbench
quantumos-org/quantum-os: A free and open source operating system based on the linux kernel, that is made for quantum computers. - https://github.com/quantumos-org/quantum-os
gubasso/ebpf-network-solana: Simple project to work with eBPF in linux kernel and eBPF programs in Solana with solana_rbpf. - https://github.com/gubasso/ebpf-network-solana
xiaziyna/CUDA-transit-detection: GPU CUDA kernel for exoplanet transit detection - https://github.com/xiaziyna/CUDA-transit-detection
zig-osdev/riscv-barebones: Barebones RISC-V kernel template for Zig - https://github.com/zig-osdev/riscv-barebones
ZystemOS/pluto: An x86 kernel written in Zig - https://github.com/ZystemOS/pluto
linuxkerneltravel/lmp: LMP provides an eBPF Supermarket for developers, including eBPF tools, open-source projects based on eBPF, eBPF learning materials, Linux kernel learning materials, and more. - https://github.com/linuxkerneltravel/lmp
kernelmachine/utah: Dataframe structure and operations in Rust - https://github.com/kernelmachine/utah
intel/hexl-fpga: Intel Homomorphic Encryption Acceleration Library for FPGAs, including open source implementation of FPGA kernels for accelerating NTT, INTT, Keyswitch and Dyadic Multiplication modular arithmetic operations, FPGA runtime, and host APIs for connecting to third-party homomorphic encryption libraries. - https://github.com/intel/hexl-fpga
NVIDIA/open-gpu-kernel-modules: NVIDIA Linux open GPU kernel module source - https://github.com/NVIDIA/open-gpu-kernel-modules
nanovms/nanos: A kernel designed to run one and only one application in a virtualized environment - https://github.com/nanovms/nanos
clockworkpi/DevTerm: This code repository offers downloads for the latest images of various DevTerm models, as well as kernel patches, keyboard firmware, the source code for screen and printer drivers, hardware schematics, assembly instructions, and essential technical documents. - https://github.com/clockworkpi/DevTerm
clockworkpi/uConsole: This code repository offers downloads for the latest images of various uConsole models, along with kernel patches, firmware for the keyboard and 4G expansion module, hardware schematics, assembly instructions, and essential technical documents. - https://github.com/clockworkpi/uConsole
r3-os/r3: R3-OS — Experimental static (μITRON-esque) RTOS kernel for deeply embedded systems, testing the limit of Rust's compile-time evaluation and generics - https://github.com/r3-os/r3
sunriseos/SunriseOS: Horizon/NX kernel reimplementation - https://github.com/sunriseos/SunriseOS
emilyst/hid-nx-dkms: Alternative Linux kernel HID driver for Nintendo Switch controllers - https://github.com/emilyst/hid-nx-dkms
CachyOS/linux-cachyos: Archlinux Kernel based on different schedulers and some other performance improvements. - https://github.com/CachyOS/linux-cachyos
charles-r-earp/krnl: Safe, portable, high performance compute (GPGPU) kernels. - https://github.com/charles-r-earp/krnl
mewz-project/mewz: A unikernel designed specifically for running Wasm applications and compatible with WASI - https://github.com/mewz-project/mewz
oxidecomputer/hubris: A lightweight, memory-protected, message-passing kernel for deeply embedded systems. - https://github.com/oxidecomputer/hubris
zerodevapp/kernel: https://docs.zerodev.app/ - https://github.com/zerodevapp/kernel
torvalds/linux: Linux kernel source tree - https://github.com/torvalds/linux
XWHQSJ/ebooks: A repository for  ebooks， including C, C plus plus, Linux Kernel, Compiler, OS, Algorithm, Security, Database, Network, ML and DL - https://github.com/XWHQSJ/ebooks
tenstorrent/tt-metal: :metal: TT-NN operator library, and TT-Metalium low level kernel programming model. - https://github.com/tenstorrent/tt-metal
gojue/ecapture: Capturing SSL/TLS plaintext without a CA certificate using eBPF. Supported on Linux/Android kernels for amd64/arm64. - https://github.com/gojue/ecapture
tugrul512bit/libGPGPU: Multi-GPU & CPU OpenCL kernel executor with load-balancing as if there is one big GPU. - https://github.com/tugrul512bit/libGPGPU
unikraft/unikraft: A next-generation cloud native kernel designed to unlock best-in-class performance, security primitives and efficiency savings. - https://github.com/unikraft/unikraft
unum-cloud/udisk: The fastest ACID-transactional persisted Key-Value store designed as modified LSM-Tree for NVMe block-devices with GPU-acceleration and SPDK to bypass the Linux kernel - https://github.com/unum-cloud/udisk
solo-io/bumblebee: Get eBPF programs running from the cloud to the kernel in 1 line of bash - https://github.com/solo-io/bumblebee
solo-io/unik: The Unikernel & MicroVM Compilation and Deployment Platform - https://github.com/solo-io/unik
google/gvisor: Application Kernel for Containers - https://github.com/google/gvisor
ReturnInfinity/BareMetal: A very minimal, resource efficient exo-kernel - https://github.com/ReturnInfinity/BareMetal
0xAX/linux-insides: A book-in-progress about the Linux kernel and its insides. - https://github.com/0xAX/linux-insides
pranjalssh/fast.cu: Fastest kernels written from scratch - https://github.com/pranjalssh/fast.cu
IsaacWoods/poplar: Toy microkernel and userspace written in Rust, exploring modern ideas - https://github.com/IsaacWoods/poplar
StardustOS/stardust-oxide: Rust-based Unikernel - https://github.com/StardustOS/stardust-oxide
cilium/pwru: Packet, where are you? -- eBPF-based Linux kernel networking debugger - https://github.com/cilium/pwru
polycube-network/polycube: eBPF/XDP-based software framework for fast network services running in the Linux kernel. - https://github.com/polycube-network/polycube
sysprog21/lkmpg: The Linux Kernel Module Programming Guide (updated for 5.0+ kernels) - https://github.com/sysprog21/lkmpg
Mic92/zig.ko: Linux kernel module written in Zig - https://github.com/Mic92/zig.ko
cppcoffee/kvm-box: The kvm-box is a minimalist virtual machine monitor (VMM) that uses the Linux Kernel Virtual Machine (KVM) to create and run microVM - https://github.com/cppcoffee/kvm-box
astefanutti/kms-glsl: CLI that runs OpenGL fragment shaders using the DRM/KMS Linux kernel subsystem - https://github.com/astefanutti/kms-glsl
Operating_Systems_kernel: 3 repos
