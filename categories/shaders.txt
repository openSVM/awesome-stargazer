# SHADERS (57 repositories)

charlieroberts/wgsl_live: An environment for live coding fragment shaders using WGSL - https://github.com/charlieroberts/wgsl_live
googlefonts/compute-shader-101: Sample code for compute shader 101 training - https://github.com/googlefonts/compute-shader-101
gtasnail/fivem-glsl: A POC to run glsl on FiveM client game screen. - https://github.com/gtasnail/fivem-glsl
daw42/glslcookbook: Example code for the OpenGL Shading Language Cookbook - 2nd Edition (3rd Edition now available) - https://github.com/daw42/glslcookbook
fearlessgeekmedia/Awesome-Ghostty: A list of tools, shaders, and more for Ghostty, an awesome GPU-accelerated terminal emulator. - https://github.com/fearlessgeekmedia/Awesome-Ghostty
rysana-ai/react-shaders: Modern GLSL/WebGL bindings & components for React and Typescript. - https://github.com/rysana-ai/react-shaders
gre/gl-react: gl-react ‚Äì React library to write and compose WebGL shaders - https://github.com/gre/gl-react
google/clspv: Clspv is a compiler for OpenCL C to Vulkan compute shaders - https://github.com/google/clspv
clibequilibrium/EquilibriumEngine: Data-oriented and multi-threaded C11 Game Engine with libraries & shaders hot-reloading. - https://github.com/clibequilibrium/EquilibriumEngine
westoncb/under-game: Under: A simple game with procedural graphics in JavaScript and GLSL - https://github.com/westoncb/under-game
ahopness/GodotRetro: A pack of retro shaders for Godot. - https://github.com/ahopness/GodotRetro
fogleman/Craft: A simple Minecraft clone written in C using modern OpenGL (shaders). - https://github.com/fogleman/Craft
MirzaBeig/GPU-Fog-Particles: Textureless fog particles using a highly customizable shader to attenuate noise values.  - https://github.com/MirzaBeig/GPU-Fog-Particles
przemyslawzaworski/Unity3D-CG-programming: Various shaders.  - https://github.com/przemyslawzaworski/Unity3D-CG-programming
Strum355/mcshader-lsp: A language server and Visual Studio Code extension for Minecraft GLSL Shaders - https://github.com/Strum355/mcshader-lsp
stevensona/shader-toy: Shadertoy-like live preview for GLSL shaders in Visual Studio Code - https://github.com/stevensona/shader-toy
CharStiles/shaderplace: Real-time collaborative GLSL livecode editor - https://github.com/CharStiles/shaderplace
Gargaj/Bonzomatic: Live shader coding tool and Shader Showdown workhorse - https://github.com/Gargaj/Bonzomatic
aras-p/glsl-optimizer: GLSL optimizer based on Mesa's GLSL compiler. Used to be used in Unity for mobile shader optimization. - https://github.com/aras-p/glsl-optimizer
patriciogonzalezvivo/glslViewer: Console-based GLSL Sandbox for 2D/3D shaders - https://github.com/patriciogonzalezvivo/glslViewer
0xrinegade/GPUSorting: State of the art sorting and segmented sorting, including OneSweep. Implemented in CUDA, D3D12, and Unity style compute shaders. Theoretically portable to all wave/warp/subgroup sizes. - https://github.com/0xrinegade/GPUSorting
MenacingMecha/godot-psx-style-demo: Demo project featuring a collection of PS1 style shaders and materials for Godot engine. - https://github.com/MenacingMecha/godot-psx-style-demo
ekzhang/graphics-workshop: Learn computer graphics by writing GPU shaders! - https://github.com/ekzhang/graphics-workshop
stackgl/shader-school: :mortar_board: A workshopper for GLSL shaders and graphics programming - https://github.com/stackgl/shader-school
patriciogonzalezvivo/thebookofshaders: Step-by-step guide through the abstract and complex universe of Fragment Shaders. - https://github.com/patriciogonzalezvivo/thebookofshaders
libretro/glsl-shaders: This repo is for glsl shaders converted by hand from libretro's common-shaders repo, since some don't play nicely with the cg2glsl script. - https://github.com/libretro/glsl-shaders
b0nes164/GPUSorting: State of the art sorting and segmented sorting, including OneSweep. Implemented in CUDA, D3D12, and Unity style compute shaders. Theoretically portable to all wave/warp/subgroup sizes. - https://github.com/b0nes164/GPUSorting
CoolDotty/Shader-Stacker: The GPU accelerated version of Sprite Stacking. A top-down 2.5D trick for the Godot Engine. - https://github.com/CoolDotty/Shader-Stacker
mausimus/ShaderGlass: Overlay for running GPU shaders on top of Windows desktop - https://github.com/mausimus/ShaderGlass
shader-slang/slang: Making it easier to work with shaders - https://github.com/shader-slang/slang
repalash/Open-Shaders: Collection of many open source shaders(GLSL, HLSL, CG) in popular open source game development and rendering engines and public repositories. - https://github.com/repalash/Open-Shaders
bradleybauer/music_visualizer: Shader viewer / music visualizer for Windows and Linux - https://github.com/bradleybauer/music_visualizer
vanrez-nez/awesome-glsl: :sparkler: Compilation of the best resources to learn programming OpenGL Shaders - https://github.com/vanrez-nez/awesome-glsl
diwi/PixelFlow: A Processing/Java library for high performance GPU-Computing (GLSL). Fluid Simulation + SoftBody Dynamics + Optical Flow + Rendering + Image Processing + Particle Systems + Physics +... - https://github.com/diwi/PixelFlow
dfranx/SHADERed: Lightweight, cross-platform & full-featured shader IDE - https://github.com/dfranx/SHADERed
lettier/3d-game-shaders-for-beginners: üéÆ A step-by-step guide to implementing SSAO, depth of field, lighting, normal mapping, and more for your 3D game. - https://github.com/lettier/3d-game-shaders-for-beginners
KhronosGroup/glslang: Khronos-reference front end for GLSL/ESSL, partial front end for HLSL, and a SPIR-V generator. - https://github.com/KhronosGroup/glslang
microsoft/ShaderConductor: ShaderConductor is a tool designed for cross-compiling HLSL to other shading languages - https://github.com/microsoft/ShaderConductor
RayMarch/shame: A fully featured DSL for writing shaders/GPU-pipelines in Rust - https://github.com/RayMarch/shame
Auburn/FastNoiseLite: Fast Portable Noise Library - C# C++ C Java HLSL GLSL JavaScript Rust Go  - https://github.com/Auburn/FastNoiseLite
andrewrk/glslang-zig: Glslang ported to the Zig build system. - https://github.com/andrewrk/glslang-zig
patriciogonzalezvivo/glslEditor: Simple WebGL Fragment Shader Editor - https://github.com/patriciogonzalezvivo/glslEditor
tiawl/shaderc.zig: shaderc packaged for @ziglang - https://github.com/tiawl/shaderc.zig
ethanthoma/zig-webgpu-compute-shader: Example of running a compute shader in Zig using webgpu - https://github.com/ethanthoma/zig-webgpu-compute-shader
Rust-GPU/rust-gpu: üêâ Making Rust a first-class language and ecosystem for GPU shaders üöß - https://github.com/Rust-GPU/rust-gpu
LPGhatguy/crevice: Rust crate to generate GLSL structs with explicitly-initialized padding bytes - https://github.com/LPGhatguy/crevice
AskingQuestions/Shadeup: A language for WebGPU that makes writing shaders easier - https://github.com/AskingQuestions/Shadeup
zeokku/glsl.app: üåÖ Modern WebGL GLSL Shaders Editor - https://github.com/zeokku/glsl.app
EmbarkStudios/rust-gpu: üêâ Making Rust a first-class language and ecosystem for GPU shaders üöß - https://github.com/EmbarkStudios/rust-gpu
GLSL-Debugger/GLSL-Debugger: GLSL source level debugger. - https://github.com/GLSL-Debugger/GLSL-Debugger
patriciogonzalezvivo/lygia: LYGIA, it's a granular and multi-language (GLSL, HLSL, Metal,  WGSL,  WEGL and CUDA) shader library designed for performance and flexibility - https://github.com/patriciogonzalezvivo/lygia
astefanutti/kms-glsl: CLI that runs OpenGL fragment shaders using the DRM/KMS Linux kernel subsystem - https://github.com/astefanutti/kms-glsl
mkeeter/futureproof: A live editor for fragment shaders, powered by Neovim, WebGPU, and Zig! - https://github.com/mkeeter/futureproof
redorav/hlslpp: Math library using HLSL syntax with multiplatform SIMD support - https://github.com/redorav/hlslpp
Shaders: 27 repos
Shaders_other: 24 repos
Shaders_glsl: 3 repos
